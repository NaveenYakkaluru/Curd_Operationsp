{"ast":null,"code":"var _jsxFileName = \"N:\\\\React js\\\\naveen\\\\src\\\\crud.js\";\n// import { useState } from \"react\";\n\n// function Navi(){\n//     const[Fullname,setFullname]=useState()\n//     const[Email,setEmail]=useState()\n//     const[Mobile,setMobile]=useState()\n//     const[City,setCity]=useState()\n//     const [todo,setTodo]=useState([])\n\n//     const fullName=(e)=>{\n//         setFullname(e.target.value)\n//     }\n//     const emailNavi=(e)=>{\n//         setEmail(e.target.value)\n//     }\n//     const mobileNavi=(e)=>{\n//         setMobile(e.target.value)\n//     }\n//     const cityNavi=(e)=>{\n//         setCity(e.target.value)\n//     }\n\n//   const myFunction=(e)=>{\n//     e.preventDefault()\n//     const newTodos=[...todo,todo]\n//     setTodo(newTodos)\n//   }\n\n//     return(\n//         <div>\n//             <form onSubmit={myFunction}>\n//             <label>Full name:</label>\n//             <input value={Fullname} type=\"text\" placeholder=\"enter your name\" required onChange={fullName}/>\n//             <br/><br/>\n//             <label>Email:</label>\n//             <input  value={Email} type=\"text\" placeholder=\"email\" required onChange={emailNavi}/>\n//             <br/><br/>\n//             <label>Mobile:</label>\n//             <input  value={Mobile} type=\"text\"placeholder=\"mobile\" required onChange={mobileNavi}/>\n//             <br/><br/>\n//             <label>City:</label>\n//             <input value={City} type=\"text\"placeholder=\"city\" required onChange={cityNavi}/>\n//             <br/><br/>\n//             <button>ADD</button>\n\n//             </form>\n//             <Gui todo={todo}/>\n//         </div>\n//     )\n// }\n// function Gui({todo}){\n\n//     return(\n//         <div>\n//             {todo.map((todo,index)=>\n//             <div key={index}>\n//                 <h3>{todo}</h3>\n//             </div>)}\n\n//         </div>\n//     )\n// }\n\n// export default Navi;\n\n// import React from \"react\";\n// class Navi extends React.Component{\n//     constructor(){\n//         super();\n//         this.input=React.createRef()\n//         this.input1=React.createRef()\n//         this.input2=React.createRef()\n//         this.input3=React.createRef()\n//         this.input4=React.createRef()\n\n//         this.state={\n//             list:[]\n//         }\n//     }\n\n//     addData=()=>{\n//         const Items={value:this.input.current.value,\n//         value1:this.input1.current.value,\n//         value2:this.input2.current.value,\n//         value3:this.input3.current.value,\n//         value4:this.input4.current.value }\n\n//         if(localStorage.getItem(\"list\")=== null){\n//             const list=[]\n//                 list.push(Items)\n//                 localStorage.setItem(\"list\",JSON.stringify(list))   \n//         }\n//         else{\n//             const list=JSON.parse(localStorage.getItem(\"list\"))\n//             list.push(Items)\n//             localStorage.setItem(\"list\",JSON.stringify(list))   \n\n//         }\n//          this.setState({list:JSON.parse(localStorage.getItem(\"list\"))})\n//     }\n\n//     componentDidMount(){\n//         const list=window.localStorage.getItem(\"list\")\n//         const value=JSON.parse(list)\n//         if(list == null){\n//             return false\n//         }\n//         else{\n//             this.setState({list:value})\n//         }\n//     }\n//     render(){\n//         return(\n//             <div>\n//                 <input  ref={ this.input} type=\"text\" placeholder=\"name\"/>\n//                 <br/><br/>\n//                 <input  ref={this.input1} type=\"email\" placeholder=\"email\"/>\n//                 <br/><br/>\n//                 <input ref={this.input2} type=\"text\"placeholder=\"mobile\"/>\n//                 <br/><br/>\n//                 <input ref={this.input4} type=\"city\" placeholder=\"city\"/>\n//                 <br/><br/>\n//                 <button onClick={this.addData}>ADD</button>\n\n//                 <thead>\n//                     <tr>\n//                         <td>name</td>\n//                         <td>email</td>\n//                         <td>mobile</td>\n//                         <td>city</td>\n//                     </tr>\n//                 </thead>\n//                 {this.state.list.map((items)=>{return(<div>\n//                     <tbody>\n//                         <tr>\n//                             <td>{items.value}</td>\n//                             <td>{items.value1}</td>\n//                             <td>{items.value2}</td>\n//                             <td>{items.value3}</td>\n//                             <td>{items.value4}</td>\n//                         </tr>\n//                     </tbody>\n//                 </div>)})}\n//             </div>      \n//         )\n//     }\n// }\n// export default Navi;\n\nimport \"./.crud.css\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Navi extends React.Component {\n  constructor() {\n    super();\n    this.addData = e => {\n      const Items = {\n        value: this.input.current.value,\n        value1: this.input1.current.value,\n        value2: this.input2.current.value,\n        value3: this.input3.current.value,\n        value4: this.input4.current.value\n      };\n      if (localStorage.getItem('list') === null) {\n        const list = [];\n        list.push(Items);\n        localStorage.setItem('list', JSON.stringify(list));\n      } else {\n        const list = JSON.parse(localStorage.getItem('list'));\n        list.push(Items);\n        localStorage.setItem('list', JSON.stringify(list));\n      }\n      this.setState({\n        list: JSON.parse(localStorage.getItem('list'))\n      });\n    };\n    this.delete = () => {\n      const value = JSON.parse(localStorage.getItem(\"list\"));\n      value.splice(0, 1);\n      this.setState({\n        list: value\n      });\n      localStorage.setItem(\"list\", JSON.stringify(value));\n    };\n    this.edit = e => {\n      const value = JSON.parse(localStorage.getItem(\"list\"));\n    };\n    this.input = /*#__PURE__*/React.createRef();\n    this.input1 = /*#__PURE__*/React.createRef();\n    this.input2 = /*#__PURE__*/React.createRef();\n    this.input3 = /*#__PURE__*/React.createRef();\n    this.input4 = /*#__PURE__*/React.createRef();\n    this.state = {\n      list: []\n    };\n  }\n  componentDidMount() {\n    const list = window.localStorage.getItem(\"list\");\n    const value = JSON.parse(list);\n    if (list == null) {\n      return false;\n    } else {\n      this.setState({\n        list: value\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"id5\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"enter Data\",\n            ref: this.input,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 88\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 93\n          }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n            children: \"city:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"enter data\",\n            id: \"id\",\n            ref: this.input1,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 104\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 109\n          }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n            children: \"Phonenumber:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"enter data\",\n            id: \"id1\",\n            ref: this.input2,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 105\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 110\n          }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n            children: \"email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"enter email\",\n            id: \"id2\",\n            ref: this.input3,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 107\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 112\n          }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n            children: \"Salary:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"enter data\",\n            id: \"id3\",\n            ref: this.input4,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 105\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 110\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.addData,\n            id: \"add\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 69\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 74\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 79\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Phone No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }, this), this.state.list.map(items => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: items.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: items.value1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: items.value2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: items.value3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: items.value4\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: this.delete,\n                    children: \"X\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 45\n                  }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: this.edit,\n                    children: \"edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Navi;","map":{"version":3,"names":["React","Navi","Component","constructor","addData","e","Items","value","input","current","value1","input1","value2","input2","value3","input3","value4","input4","localStorage","getItem","list","push","setItem","JSON","stringify","parse","setState","delete","splice","edit","createRef","state","componentDidMount","window","render","map","items"],"sources":["N:/React js/naveen/src/crud.js"],"sourcesContent":["// import { useState } from \"react\";\r\n\r\n// function Navi(){\r\n//     const[Fullname,setFullname]=useState()\r\n//     const[Email,setEmail]=useState()\r\n//     const[Mobile,setMobile]=useState()\r\n//     const[City,setCity]=useState()\r\n//     const [todo,setTodo]=useState([])\r\n    \r\n//     const fullName=(e)=>{\r\n//         setFullname(e.target.value)\r\n//     }\r\n//     const emailNavi=(e)=>{\r\n//         setEmail(e.target.value)\r\n//     }\r\n//     const mobileNavi=(e)=>{\r\n//         setMobile(e.target.value)\r\n//     }\r\n//     const cityNavi=(e)=>{\r\n//         setCity(e.target.value)\r\n//     }\r\n\r\n//   const myFunction=(e)=>{\r\n//     e.preventDefault()\r\n//     const newTodos=[...todo,todo]\r\n//     setTodo(newTodos)\r\n//   }\r\n \r\n//     return(\r\n//         <div>\r\n//             <form onSubmit={myFunction}>\r\n//             <label>Full name:</label>\r\n//             <input value={Fullname} type=\"text\" placeholder=\"enter your name\" required onChange={fullName}/>\r\n//             <br/><br/>\r\n//             <label>Email:</label>\r\n//             <input  value={Email} type=\"text\" placeholder=\"email\" required onChange={emailNavi}/>\r\n//             <br/><br/>\r\n//             <label>Mobile:</label>\r\n//             <input  value={Mobile} type=\"text\"placeholder=\"mobile\" required onChange={mobileNavi}/>\r\n//             <br/><br/>\r\n//             <label>City:</label>\r\n//             <input value={City} type=\"text\"placeholder=\"city\" required onChange={cityNavi}/>\r\n//             <br/><br/>\r\n//             <button>ADD</button>\r\n            \r\n//             </form>\r\n//             <Gui todo={todo}/>\r\n//         </div>\r\n//     )\r\n// }\r\n// function Gui({todo}){\r\n\r\n//     return(\r\n//         <div>\r\n//             {todo.map((todo,index)=>\r\n//             <div key={index}>\r\n//                 <h3>{todo}</h3>\r\n//             </div>)}\r\n\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Navi;\r\n\r\n\r\n// import React from \"react\";\r\n// class Navi extends React.Component{\r\n//     constructor(){\r\n//         super();\r\n//         this.input=React.createRef()\r\n//         this.input1=React.createRef()\r\n//         this.input2=React.createRef()\r\n//         this.input3=React.createRef()\r\n//         this.input4=React.createRef()\r\n\r\n//         this.state={\r\n//             list:[]\r\n//         }\r\n//     }\r\n\r\n//     addData=()=>{\r\n//         const Items={value:this.input.current.value,\r\n//         value1:this.input1.current.value,\r\n//         value2:this.input2.current.value,\r\n//         value3:this.input3.current.value,\r\n//         value4:this.input4.current.value }\r\n    \r\n//         if(localStorage.getItem(\"list\")=== null){\r\n//             const list=[]\r\n//                 list.push(Items)\r\n//                 localStorage.setItem(\"list\",JSON.stringify(list))   \r\n//         }\r\n//         else{\r\n//             const list=JSON.parse(localStorage.getItem(\"list\"))\r\n//             list.push(Items)\r\n//             localStorage.setItem(\"list\",JSON.stringify(list))   \r\n\r\n//         }\r\n//          this.setState({list:JSON.parse(localStorage.getItem(\"list\"))})\r\n//     }\r\n     \r\n//     componentDidMount(){\r\n//         const list=window.localStorage.getItem(\"list\")\r\n//         const value=JSON.parse(list)\r\n//         if(list == null){\r\n//             return false\r\n//         }\r\n//         else{\r\n//             this.setState({list:value})\r\n//         }\r\n//     }\r\n//     render(){\r\n//         return(\r\n//             <div>\r\n//                 <input  ref={ this.input} type=\"text\" placeholder=\"name\"/>\r\n//                 <br/><br/>\r\n//                 <input  ref={this.input1} type=\"email\" placeholder=\"email\"/>\r\n//                 <br/><br/>\r\n//                 <input ref={this.input2} type=\"text\"placeholder=\"mobile\"/>\r\n//                 <br/><br/>\r\n//                 <input ref={this.input4} type=\"city\" placeholder=\"city\"/>\r\n//                 <br/><br/>\r\n//                 <button onClick={this.addData}>ADD</button>\r\n\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <td>name</td>\r\n//                         <td>email</td>\r\n//                         <td>mobile</td>\r\n//                         <td>city</td>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 {this.state.list.map((items)=>{return(<div>\r\n//                     <tbody>\r\n//                         <tr>\r\n//                             <td>{items.value}</td>\r\n//                             <td>{items.value1}</td>\r\n//                             <td>{items.value2}</td>\r\n//                             <td>{items.value3}</td>\r\n//                             <td>{items.value4}</td>\r\n//                         </tr>\r\n//                     </tbody>\r\n//                 </div>)})}\r\n//             </div>      \r\n//         )\r\n//     }\r\n// }\r\n// export default Navi;\r\n\r\n\r\nimport \"./.crud.css\"\r\nimport React from \"react\";\r\nclass Navi extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.input=React.createRef()\r\n        this.input1=React.createRef()\r\n        this.input2=React.createRef()\r\n        this.input3=React.createRef()\r\n        this.input4=React.createRef()\r\n        this.state={\r\n            list:[]\r\n        }\r\n    }\r\n    addData=(e)=>{\r\n        const Items={\r\n            value:this.input.current.value,\r\n            value1:this.input1.current.value,\r\n            value2:this.input2.current.value,\r\n            value3:this.input3.current.value,\r\n            value4:this.input4.current.value\r\n        }\r\n    if(localStorage.getItem('list')===null){\r\n        const list=[]\r\n        list.push(Items)\r\n        localStorage.setItem('list',JSON.stringify(list))\r\n    }\r\n    else{\r\n        const list=JSON.parse(localStorage.getItem('list'))\r\n        list.push(Items)\r\n        localStorage.setItem('list',JSON.stringify(list))\r\n    }\r\n        this.setState({\r\n            list:JSON.parse(localStorage.getItem('list'))\r\n        })        \r\n    }\r\n\r\n  delete=()=>{\r\n  const value=JSON.parse(localStorage.getItem(\"list\"))\r\n  value.splice(0,1)\r\n  this.setState({list:value})\r\n  localStorage.setItem(\"list\",JSON.stringify(value))\r\n    }\r\n    edit=(e)=>{\r\n        const  value=JSON.parse(localStorage.getItem(\"list\"))\r\n         \r\n                                 \r\n        }\r\n    componentDidMount(){\r\n        const list=window.localStorage.getItem(\"list\")\r\n        const value=JSON.parse(list)\r\n        if(list==null){\r\n            return false\r\n        }\r\n        else{\r\n            this.setState({\r\n                list:value\r\n            })\r\n        }\r\n    }\r\n        render(){\r\n        return(\r\n            <div>\r\n                <center>\r\n                <form id=\"id5\">\r\n                <label>Name:</label>\r\n                <input type=\"text\" placeholder=\"enter Data\" ref={this.input} required/><br/><br/>\r\n                <lable>city:</lable>\r\n                <input type=\"text\" placeholder=\"enter data\" id=\"id\" ref={this.input1} required></input><br/><br/>\r\n                <lable>Phonenumber:</lable>\r\n                <input type=\"text\" placeholder=\"enter data\" id=\"id1\" ref={this.input2} required></input><br/><br/>\r\n                <lable>email:</lable>\r\n                <input type=\"email\" placeholder=\"enter email\" id=\"id2\" ref={this.input3} required></input><br/><br/>\r\n                <lable>Salary:</lable>\r\n                <input type=\"text\" placeholder=\"enter data\" id=\"id3\" ref={this.input4} required></input><br/><br/>\r\n                <button onClick={this.addData} id=\"add\">Add</button><br/><br/><br/>\r\n                </form>\r\n                <thead>\r\n                    <tr>\r\n                        <td>Name</td>\r\n                        <td>City</td>\r\n                        <td>Phone No</td>\r\n                        <td>Email</td>\r\n                        <td>Salary</td>\r\n                        <td>Update</td>\r\n                    </tr>\r\n                </thead>\r\n                {this.state.list.map((items)=>{                     \r\n                    return(\r\n                        <div>                             \r\n                            <tbody>\r\n                                    <tr>\r\n                                        <td>{items.value}</td>\r\n                                        <td>{items.value1}</td>\r\n                                        <td>{items.value2}</td>\r\n                                        <td>{items.value3}</td>\r\n                                        <td>{items.value4}</td>\r\n                                        <td><button onClick={this.delete}>X</button>&nbsp;\r\n                                        <button onClick={this.edit}>edit</button></td>\r\n                                    </tr>\r\n                            </tbody>                           \r\n                        </div>\r\n                    )\r\n                })}\r\n                </center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Navi;\r\n\r\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,aAAa;AACpB,OAAOA,KAAK,MAAM,OAAO;AAAC;AAC1B,MAAMC,IAAI,SAASD,KAAK,CAACE,SAAS;EAC9BC,WAAW,GAAE;IACT,KAAK,EAAE;IAAC,KAUZC,OAAO,GAAEC,CAAC,IAAG;MACT,MAAMC,KAAK,GAAC;QACRC,KAAK,EAAC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK;QAC9BG,MAAM,EAAC,IAAI,CAACC,MAAM,CAACF,OAAO,CAACF,KAAK;QAChCK,MAAM,EAAC,IAAI,CAACC,MAAM,CAACJ,OAAO,CAACF,KAAK;QAChCO,MAAM,EAAC,IAAI,CAACC,MAAM,CAACN,OAAO,CAACF,KAAK;QAChCS,MAAM,EAAC,IAAI,CAACC,MAAM,CAACR,OAAO,CAACF;MAC/B,CAAC;MACL,IAAGW,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAG,IAAI,EAAC;QACnC,MAAM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"},"metadata":{},"sourceType":"module","externalDependencies":[]}