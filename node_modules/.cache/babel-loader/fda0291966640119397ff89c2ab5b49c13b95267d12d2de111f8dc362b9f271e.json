{"ast":null,"code":"var _jsxFileName = \"C:\\\\React js\\\\naveen\\\\src\\\\todolist.js\";\n// import React, { Component, useState } from \"react\"\n\n// const APP=()=>{\n\n//  const [ inputList, setInputList]= useState (\" \");\n//  const [items,setItems] = useState([]);\n\n//  const itemEvent =(e)=>{\n//     setInputList(e.target.value);\n//    };\n\n//  const listofItems= () => {\n//    setItems((oldItems) => {\n//     localStorage.setItem(\"list\",inputList)\n//     return[...oldItems,inputList];\n//    });\n//  };\n\n//  const deleteHandler=(indexValue)=>{\n//     const newItems=items.filter((inputList,index)=>index !== indexValue)\n//     setItems(newItems)\n//  }\n\n//     return(\n//         <div className=\"navi\">\n//             <div className=\"center\">\n//                 <br></br>\n//                 <h1>ToDO List</h1>\n//                 <br></br>\n//                 <input type=\"text\" placeholder=\"\" onChange={itemEvent}/>\n//                 <button onClick={listofItems}>ADD</button>\n\n//                 <ol>\n//                    {/* { <li>{inputList}</li> } */}\n\n//                  {items.map((itemval,index)=>{\n//                  return <li key={index}>{itemval}&nbsp;&nbsp;&nbsp;<button onClick={()=>deleteHandler(index)} >X</button></li> \n//                  })}\n//                 </ol>\n\n//             </div>\n\n//         </div>\n//     )\n\n// }\n// export default APP;\n\n//TODo list using local storage=====>\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.addTodo = e => {\n      const items = {\n        value: this.input.current.value\n      };\n      if (localStorage.getItem(\"list\") === null) {\n        const list = [];\n        list.push(items);\n        localStorage.setItem(\"list\", JSON.stringify(list));\n      } else {\n        const list = JSON.parse(localStorage.getItem(\"list\"));\n        list.push(items);\n        localStorage.setItem(\"list\", JSON.stringify(list));\n      }\n      this.setState({\n        list: JSON.parse(localStorage.getItem(\"list\"))\n      });\n    };\n    this.deleteItem = () => {\n      const value = JSON.parse(localStorage.getItem(\"list\"));\n      value.splice(0, 1);\n      this.setState({\n        list: value\n      });\n      localStorage.setItem(\"list\", JSON.stringify(value));\n    };\n    this.input = /*#__PURE__*/React.createRef(); //<------- creatRef() mean intial value\n    this.state = {\n      list: []\n    };\n  }\n  componentDidMount() {\n    const List = window.localStorage.getItem(\"list\");\n    const data = JSON.parse(list);\n    if (list == null) {\n      return false;\n    } else {\n      this.setState({\n        list: data\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: this.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addTodo,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), this.state.list.map(items => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [items.value, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.deleteItem,\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","App","Component","constructor","addTodo","e","items","value","input","current","localStorage","getItem","list","push","setItem","JSON","stringify","parse","setState","deleteItem","splice","createRef","state","componentDidMount","List","window","data","render","map"],"sources":["C:/React js/naveen/src/todolist.js"],"sourcesContent":["\r\n// import React, { Component, useState } from \"react\"\r\n\r\n// const APP=()=>{\r\n\r\n//  const [ inputList, setInputList]= useState (\" \");\r\n//  const [items,setItems] = useState([]);\r\n\r\n//  const itemEvent =(e)=>{\r\n//     setInputList(e.target.value);\r\n//    };\r\n\r\n//  const listofItems= () => {\r\n//    setItems((oldItems) => {\r\n//     localStorage.setItem(\"list\",inputList)\r\n//     return[...oldItems,inputList];\r\n//    });\r\n//  };\r\n\r\n//  const deleteHandler=(indexValue)=>{\r\n//     const newItems=items.filter((inputList,index)=>index !== indexValue)\r\n//     setItems(newItems)\r\n//  }\r\n\r\n//     return(\r\n//         <div className=\"navi\">\r\n//             <div className=\"center\">\r\n//                 <br></br>\r\n//                 <h1>ToDO List</h1>\r\n//                 <br></br>\r\n//                 <input type=\"text\" placeholder=\"\" onChange={itemEvent}/>\r\n//                 <button onClick={listofItems}>ADD</button>\r\n\r\n//                 <ol>\r\n//                    {/* { <li>{inputList}</li> } */}\r\n\r\n//                  {items.map((itemval,index)=>{\r\n//                  return <li key={index}>{itemval}&nbsp;&nbsp;&nbsp;<button onClick={()=>deleteHandler(index)} >X</button></li> \r\n//                  })}\r\n//                 </ol>\r\n\r\n//             </div>\r\n\r\n//         </div>\r\n//     )\r\n\r\n// }\r\n// export default APP;\r\n\r\n//TODo list using local storage=====>\r\n\r\n\r\n\r\n  import React  from \"react\"\r\n    class App extends React.Component{\r\n        constructor(){\r\n            super();\r\n            this.input=React.createRef()   //<------- creatRef() mean intial value\r\n            this.state={\r\n                list:[]\r\n            }\r\n        }\r\n        addTodo=(e)=>{\r\n            const items={\r\n                value:this.input.current.value\r\n            }\r\n            if(localStorage.getItem(\"list\")===null){\r\n                const list=[]\r\n                list.push(items)\r\n                localStorage.setItem(\"list\",JSON.stringify(list))\r\n            }\r\n            else{\r\n                const list=JSON.parse(localStorage.getItem(\"list\"))\r\n                list.push(items)\r\n                localStorage.setItem(\"list\",JSON.stringify(list))\r\n\r\n            }\r\n            this.setState({\r\n                list:JSON.parse(localStorage.getItem(\"list\"))\r\n            })\r\n        }\r\n\r\n\r\n        componentDidMount(){\r\n             const List=window.localStorage.getItem(\"list\")\r\n             const data=JSON.parse(list)\r\n             if(list== null){\r\n                return false\r\n             }\r\n             else{\r\n                this.setState({\r\n                    list:data\r\n                })\r\n             }\r\n        }\r\n        deleteItem=()=>{\r\n            const value=JSON.parse(localStorage.getItem(\"list\"))\r\n            value.splice(0,1)\r\n            this.setState({\r\n                list:value\r\n\r\n            })\r\n            localStorage.setItem(\"list\",JSON.stringify(value))\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        render(){\r\n            return(\r\n                <div>\r\n                    <input type=\"text\" ref={this.input}/>\r\n                    <button onClick={this.addTodo}>Add</button>\r\n\r\n\r\n    {this.state.list.map((items)=>{\r\n        return(\r\n            <li>{items.value}\r\n            <button onClick={this.deleteItem}>Remove</button>\r\n            </li>\r\n        )\r\n    })}\r\n        </div>\r\n            )\r\n        }\r\n    }\r\n    export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}