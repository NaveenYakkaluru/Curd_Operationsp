{"ast":null,"code":"var _jsxFileName = \"N:\\\\React js\\\\naveen\\\\src\\\\crud.js\",\n  _s = $RefreshSig$();\n// import \"./crud.css\"\n// import React from \"react\";\n// class Navi extends React.Component{\n//     constructor(){\n//         super();\n//         this.input=React.createRef()\n//         this.input1=React.createRef()\n//         this.input2=React.createRef()\n//         this.input3=React.createRef()\n//         this.input4=React.createRef()\n//         this.state={\n//             list:[]\n//         }\n//     }\n//     addData=(e)=>{\n//         const Items={\n//             value:this.input.current.value,\n//             value1:this.input1.current.value,\n//             value2:this.input2.current.value,\n//             value3:this.input3.current.value,\n//             value4:this.input4.current.value\n//         }\n//     if(localStorage.getItem('list')===null){\n//         const list=[]\n//         list.push(Items)\n//         localStorage.setItem('list',JSON.stringify(list))\n//     }\n//     else{\n//         const list=JSON.parse(localStorage.getItem('list'))\n//         list.push(Items)\n//         localStorage.setItem('list',JSON.stringify(list))\n//     }\n//         this.setState({\n//             list:JSON.parse(localStorage.getItem('list'))\n//         })        \n//     }\n\n//   delete=()=>{\n//   const value=JSON.parse(localStorage.getItem(\"list\"))\n//   value.splice(0,1)\n//   this.setState({list:value})\n//   localStorage.setItem(\"list\",JSON.stringify(value))\n//     }\n\n//     componentDidMount(){\n//         const list=window.localStorage.getItem(\"list\")\n//         const value=JSON.parse(list)\n//         if(list==null){\n//             return false\n//         }\n//         else{\n//             this.setState({\n//                 list:value\n//             })\n//         }\n//     }\n\n//     edit=(e)=>{\n//         const  value=JSON.parse(localStorage.getItem(\"list\"))   \n\n//         }\n//         render(){\n//         return(\n//             <div>\n//                 <center>\n//                 <form id=\"id5\">\n//                 <label>Name:</label>\n//                 <input type=\"text\" placeholder=\"enter Data\" ref={this.input} required/><br/><br/>\n//                 <lable>city:</lable>\n//                 <input type=\"text\" placeholder=\"enter data\" id=\"id\" ref={this.input1} required></input><br/><br/>\n//                 <lable>Phonenumber:</lable>\n//                 <input type=\"text\" placeholder=\"enter data\" id=\"id1\" ref={this.input2} required></input><br/><br/>\n//                 <lable>email:</lable>\n//                 <input type=\"email\" placeholder=\"enter email\" id=\"id2\" ref={this.input3} required></input><br/><br/>\n//                 <lable>Salary:</lable>\n//                 <input type=\"text\" placeholder=\"enter data\" id=\"id3\" ref={this.input4} required></input><br/><br/>\n//                 <button onClick={this.addData} id=\"add\">Add</button><br/><br/><br/>\n//                 </form>\n//                 <thead>\n//                     <tr>\n//                         <td>Name</td>\n//                         <td>City</td>\n//                         <td>Phone No</td>\n//                         <td>Email</td>\n//                         <td>Salary</td>\n//                         <td>Update</td>\n//                     </tr>\n//                 </thead>\n//                 {this.state.list.map((items)=>{                     \n//                     return(\n//                         <div>                             \n//                             <tbody>\n//                                     <tr>\n//                                         <td>{items.value}</td>\n//                                         <td>{items.value1}</td>\n//                                         <td>{items.value2}</td>\n//                                         <td>{items.value3}</td>\n//                                         <td>{items.value4}</td>\n//                                         <td><button onClick={this.delete}>X</button>&nbsp;\n//                                         <button onClick={this.edit}>edit</button></td>\n//                                     </tr>\n//                             </tbody>                           \n//                         </div>\n//                     )\n//                 })}\n//                 </center>\n//             </div>\n//         )\n//     }\n// }\n// export default Navi;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Example() {\n  _s();\n  const [data, setData] = useState([]);\n  const [formData, setFormData] = useState({});\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    const response = await fetch('https://myapi.com/data');\n    const data = await response.json();\n    setData(data);\n  };\n  const handleInputChange = event => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch('https://myapi.com/data', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    const result = await response.json();\n    setData([...data, result]);\n  };\n  const handleDelete = async id => {\n    const response = await fetch(`https://myapi.com/data/${id}`, {\n      method: 'DELETE'\n    });\n    const result = await response.json();\n    const updatedData = data.filter(item => item.id !== id);\n    setData(updatedData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \" - \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(item.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 27\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), \"\\xA0\\xA0\\xA0\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(Example, \"FosmAKS3UvfJOhNy2GWoB9uzTk8=\");\n_c = Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["React","useState","useEffect","Example","data","setData","formData","setFormData","fetchData","response","fetch","json","handleInputChange","event","target","value","name","handleFormSubmit","preventDefault","method","headers","body","JSON","stringify","result","handleDelete","id","updatedData","filter","item","map"],"sources":["N:/React js/naveen/src/crud.js"],"sourcesContent":["\r\n// import \"./crud.css\"\r\n// import React from \"react\";\r\n// class Navi extends React.Component{\r\n//     constructor(){\r\n//         super();\r\n//         this.input=React.createRef()\r\n//         this.input1=React.createRef()\r\n//         this.input2=React.createRef()\r\n//         this.input3=React.createRef()\r\n//         this.input4=React.createRef()\r\n//         this.state={\r\n//             list:[]\r\n//         }\r\n//     }\r\n//     addData=(e)=>{\r\n//         const Items={\r\n//             value:this.input.current.value,\r\n//             value1:this.input1.current.value,\r\n//             value2:this.input2.current.value,\r\n//             value3:this.input3.current.value,\r\n//             value4:this.input4.current.value\r\n//         }\r\n//     if(localStorage.getItem('list')===null){\r\n//         const list=[]\r\n//         list.push(Items)\r\n//         localStorage.setItem('list',JSON.stringify(list))\r\n//     }\r\n//     else{\r\n//         const list=JSON.parse(localStorage.getItem('list'))\r\n//         list.push(Items)\r\n//         localStorage.setItem('list',JSON.stringify(list))\r\n//     }\r\n//         this.setState({\r\n//             list:JSON.parse(localStorage.getItem('list'))\r\n//         })        \r\n//     }\r\n\r\n//   delete=()=>{\r\n//   const value=JSON.parse(localStorage.getItem(\"list\"))\r\n//   value.splice(0,1)\r\n//   this.setState({list:value})\r\n//   localStorage.setItem(\"list\",JSON.stringify(value))\r\n//     }\r\n    \r\n//     componentDidMount(){\r\n//         const list=window.localStorage.getItem(\"list\")\r\n//         const value=JSON.parse(list)\r\n//         if(list==null){\r\n//             return false\r\n//         }\r\n//         else{\r\n//             this.setState({\r\n//                 list:value\r\n//             })\r\n//         }\r\n//     }\r\n\r\n//     edit=(e)=>{\r\n//         const  value=JSON.parse(localStorage.getItem(\"list\"))   \r\n                       \r\n//         }\r\n//         render(){\r\n//         return(\r\n//             <div>\r\n//                 <center>\r\n//                 <form id=\"id5\">\r\n//                 <label>Name:</label>\r\n//                 <input type=\"text\" placeholder=\"enter Data\" ref={this.input} required/><br/><br/>\r\n//                 <lable>city:</lable>\r\n//                 <input type=\"text\" placeholder=\"enter data\" id=\"id\" ref={this.input1} required></input><br/><br/>\r\n//                 <lable>Phonenumber:</lable>\r\n//                 <input type=\"text\" placeholder=\"enter data\" id=\"id1\" ref={this.input2} required></input><br/><br/>\r\n//                 <lable>email:</lable>\r\n//                 <input type=\"email\" placeholder=\"enter email\" id=\"id2\" ref={this.input3} required></input><br/><br/>\r\n//                 <lable>Salary:</lable>\r\n//                 <input type=\"text\" placeholder=\"enter data\" id=\"id3\" ref={this.input4} required></input><br/><br/>\r\n//                 <button onClick={this.addData} id=\"add\">Add</button><br/><br/><br/>\r\n//                 </form>\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <td>Name</td>\r\n//                         <td>City</td>\r\n//                         <td>Phone No</td>\r\n//                         <td>Email</td>\r\n//                         <td>Salary</td>\r\n//                         <td>Update</td>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 {this.state.list.map((items)=>{                     \r\n//                     return(\r\n//                         <div>                             \r\n//                             <tbody>\r\n//                                     <tr>\r\n//                                         <td>{items.value}</td>\r\n//                                         <td>{items.value1}</td>\r\n//                                         <td>{items.value2}</td>\r\n//                                         <td>{items.value3}</td>\r\n//                                         <td>{items.value4}</td>\r\n//                                         <td><button onClick={this.delete}>X</button>&nbsp;\r\n//                                         <button onClick={this.edit}>edit</button></td>\r\n//                                     </tr>\r\n//                             </tbody>                           \r\n//                         </div>\r\n//                     )\r\n//                 })}\r\n//                 </center>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n// export default Navi;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction Example() {\r\n  const [data, setData] = useState([]);\r\n  const [formData, setFormData] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    const response = await fetch('https://myapi.com/data');\r\n    const data = await response.json();\r\n    setData(data);\r\n  }\r\n\r\n  const handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const response = await fetch('https://myapi.com/data', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(formData)\r\n    });\r\n    const result = await response.json();\r\n    setData([...data, result]);\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const response = await fetch(`https://myapi.com/data/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    const result = await response.json();\r\n    const updatedData = data.filter((item) => item.id !== id);\r\n    setData(updatedData);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {data.map((item) => (\r\n          <li key={item.id}>\r\n            {item.name} - <button onClick={() => handleDelete(item.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <label>\r\n          Name:\r\n          <input type=\"text\" name=\"name\" onChange={handleInputChange} />\r\n        </label>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n "],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,SAASC,OAAO,GAAG;EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdM,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,YAAY;IAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,CAAC;IACtD,MAAMN,IAAI,GAAG,MAAMK,QAAQ,CAACE,IAAI,EAAE;IAClCN,OAAO,CAACD,IAAI,CAAC;EACf,CAAC;EAED,MAAMQ,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAAM;IAC3B,MAAMC,KAAK,GAAGD,MAAM,CAACC,KAAK;IAC1B,MAAMC,IAAI,GAAGF,MAAM,CAACE,IAAI;IACxBT,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACU,IAAI,GAAGD;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,gBAAgB,GAAG,MAAOJ,KAAK,IAAK;IACxCA,KAAK,CAACK,cAAc,EAAE;IACtB,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;MACrDS,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACjB,QAAQ;IAC/B,CAAC,CAAC;IACF,MAAMkB,MAAM,GAAG,MAAMf,QAAQ,CAACE,IAAI,EAAE;IACpCN,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEoB,MAAM,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAE,0BAAyBgB,EAAG,EAAC,EAAE;MAC3DP,MAAM,EAAE;IACV,CAAC,CAAC;IACF,MAAMK,MAAM,GAAG,MAAMf,QAAQ,CAACE,IAAI,EAAE;IACpC,MAAMgB,WAAW,GAAGvB,IAAI,CAACwB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC;IACzDrB,OAAO,CAACsB,WAAW,CAAC;EACtB,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,UACGvB,IAAI,CAAC0B,GAAG,CAAED,IAAI,iBACb;QAAA,WACGA,IAAI,CAACb,IAAI,sBAAI;UAAQ,OAAO,EAAE,MAAMS,YAAY,CAACI,IAAI,CAACH,EAAE,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB;MAAA,GADpEG,IAAI,CAACH,EAAE;QAAA;QAAA;QAAA;MAAA,QAGjB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,eACL;MAAM,QAAQ,EAAET,gBAAiB;MAAA,wBAC/B;QAAA,iCAEE;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,MAAM;UAAC,QAAQ,EAAEL;QAAkB;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACxD,eACR;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QAChC;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GAhEQT,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}